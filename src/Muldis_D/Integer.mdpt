Muldis_D:PT_STD:ASCII:"http://muldis.com":0;

package_segment Muldis_D:"http://muldis.com":0:Integer;

/*************************************************************************/

Muldis_D.Type.Integer ::= special_type;


Muldis_D.Type.Int     ::= synonym of Integer;

Muldis_D.Type.Integer.NN ::= subset_type of Integer where (.0 >= 0);
Muldis_D.Type.Integer.P ::= subset_type of Integer.NN where (.0 != 0);

/*************************************************************************/

Muldis_D.Integer."<=>"|order ::= function
    (Order <-- 0 : Integer, 1 : Integer)
    implements Ordered."<=>" : (...);

/*************************************************************************/

Muldis_D.Integer."--"|pred|dec ::= function (Integer <-- 0 : Integer)
    implements Ordinal."--" : (.0 - 1);

Muldis_D.Integer."++"|succ|inc ::= function (Integer <-- 0 : Integer)
    implements Ordinal."++" : (.0 + 1);

/*************************************************************************/

Muldis_D.Integer.abs ::= function () : (...);

Muldis_D.Integer."+"|plus|sum ::= function
    (Integer <-- 0 : Integer, 1 : Integer)
    implements Numeric."+"
    is_commutative is_associative is_symmetric identity 0
    : (...);

Muldis_D.Integer."-"|minus|diff ::= function () : (...);

Muldis_D.Integer."|-|"|abs_minus|abs_diff ::= function () : (...);

Muldis_D.Integer."*"|product ::= function () : (...);

Muldis_D.Integer."/"|frac_quotient ::= function () : (...);

Muldis_D.Integer."div"|whole_quotient ::= function () : (...);

Muldis_D.Integer."mod"|remainder ::= function () : (...);

Muldis_D.Integer.quot_and_rem ::= function () : (...);

/*************************************************************************/

Muldis_D.Integer.power ::= function () : (...);

Muldis_D.Integer.factorial ::= function (Integer.P <-- 0 : Integer.P) :
    ([*] enumerated(1 .. .0));

/*************************************************************************/


Muldis_D:PT_STD:ASCII:"http://muldis.com":0;

package_segment Muldis_D:"http://muldis.com":0:Stringy;

/*************************************************************************/

/* TODO - THIS FILE IS OUT OF DATE - INTEGERS NOW STRUCTURES NOT OPAQUE. */

MD.Stringy ::= abstract_type composes Ordered;

MD.String ::= LL_String composes Stringy;

MD.Str ::= String;

MD.String.NN ::= type of String where (.0->every_elem_isa($Integer.NN));

MD.String.P ::= type of String.NN where (.0->every_elem_isa($Integer.P));

/*************************************************************************/

MD.String."<=>"|order ::= function
    (Order <-- 0|lhs : String, 1|rhs : String)
    implements Ordered."<=>"
: (
       .0 = .1            ?? $=>Same
    !! LL_in_order(*\*:[.0,.1]) ?? $=>Less
    !!                       $=>More
);

/*************************************************************************/

MD.String.is_empty ::= function (Boolean <-- String)
    : LL_empty(*LL_payload(*.0));

MD.String.is_not_empty ::= function (Boolean <-- String)
    : !.0->is_empty();

MD.String.first_elem ::= function (Universal <-- String)
    requires (.0->is_not_empty()) : LL_first(*LL_payload(*.0));

MD.String.nonfirst_elems ::= function (String <-- String)
    requires (.0->is_not_empty()) : ...;

MD.String."#"|count|cardinality ::= function
    (Integer.NN <-- String) : ...;

MD.String.elem ::= function
    (Universal <-- 0|string : String, 1|index : Integer.NN)
    requires ... : ...;

MD.String.every_elem_isa ::= function
    (Boolean <-- 0|string : String, 1|type : SC_Reference)
    : LL_every_elem_isa(*\*:[LL_payload(*.0),.1]);

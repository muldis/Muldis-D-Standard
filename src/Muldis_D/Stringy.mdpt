Muldis_D:Plain_Text:ASCII:"http://muldis.com":"0.200";

package_segment Muldis_D:"http://muldis.com":"0.200":Stringy;

/*************************************************************************/

MD.Stringy ::= type abstract composes Ordered;

MD.String ::= type of Universal where \*^[isa_String,topic] default \+[]
    composes Stringy and_provides_its_default;

MD.Str ::= synonym of String;

MD.String.NN ::= type of String where (every_elem_isa(topic,$Integer.NN));

MD.String.P ::= type of String.NN where (every_elem_isa(topic,$Integer.P));

/*************************************************************************/

MD.String."<=>" ::= function --> Order <-- (String, String)
    implements Ordered."<=>"
: (
       .0 = .1            ?? $=>Same
    !! ... ?? $=>Less
    !!                       $=>More
);

MD.String.order ::= synonym of "<=>";

/*************************************************************************/

MD.String.is_empty ::= function --> Boolean <-- (String)
    : topic = \+[];

MD.String.is_not_empty ::= function --> Boolean <-- (String)
    : topic != \+[];

MD.String.first_elem ::= function --> Universal <-- (String)
    requires topic != \+[]
    : ...;

MD.String.nonfirst_elems ::= function --> String <-- (String)
    requires topic != \+[]
    : ...;

MD.String."#" ::= function --> Integer.NN <-- (String)
    : ...;

MD.String.count       ::= synonym of "#";
MD.String.cardinality ::= synonym of "#";

MD.String.elem ::= function --> Integer <-- (String, Integer.NN)
    requires ...
    : ...;

MD.String.every_elem_isa ::= function --> Boolean <-- (String, SC_Reference)
    : \*^[every_elem_isa,.0,.1];

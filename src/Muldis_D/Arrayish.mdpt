Muldis_D:Plain_Text:ASCII:"http://muldis.com":"0.200";

package_segment Muldis_D:"http://muldis.com":"0.200":Arrayish;

/* THIS FILE IS OUTDATED; THERE IS NO Muldis_D::Low_Level PACKAGE! */

/*************************************************************************/

MD.Arrayish ::= abstract_type composes Ordered;

MD.Array ::= synonym of ::MDLL.Array composes Arrayish;

/*************************************************************************/

/* Note that this will die if any array elements need to be compared other
   than for equality but there is no "<=>" defined for their type. */

MD.Array."<=>" ::= function --> Order <-- (Array, Array)
    implements Ordered."<=>"
: (
       is_empty(.0) ?? (is_empty(.1) ?? $=>Same !! $=>Less)
    !! is_empty(.1) ?? $=>More
    !! first_elem(.0) = first_elem(.1)
        ?? 0(nonfirst_elems(.0),nonfirst_elems(.1))
    !! first_elem(.0) <=> first_elem(.1)
);

MD.Array.order ::= synonym of "<=>";

/*************************************************************************/

MD.Array.is_empty ::= function --> Boolean <-- (Array)
    : ::MDLL.Universal.is_empty(*::MDLL.Structure.payload(*.0));

MD.Array.is_not_empty ::= function --> Boolean <-- (Array)
    : !is_empty(.0);

MD.Array.first_elem ::= function --> Universal <-- (Array)
    requires (is_not_empty(.0)) : ::MDLL.Universal.first(*::MDLL.Structure.payload(*.0));

MD.Array.nonfirst_elems ::= function --> Array <-- (Array)
    requires (is_not_empty(.0)) : ...;

MD.Array."#" ::= function
    --> Integer.NN <-- (Array) : ...;

MD.Array.count       ::= synonym of "#";
MD.Array.cardinality ::= synonym of "#";

/* Note that the ".[]" syntax is implemented using this function. */

MD.Array.elem ::= function
    --> Universal <-- (0|array : Array, 1|index : Integer.NN)
    requires ... : ...;

MD.Array.every_elem_isa ::= function
    --> Boolean <-- (0|array : Array, 1|type : SC_Reference)
    : ::MDLL.Universal.every_elem_isa(*\*:[::MDLL.Structure.payload(*.0),.1]);

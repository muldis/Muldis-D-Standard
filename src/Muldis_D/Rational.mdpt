Muldis_D:Plain_Text:ASCII:"http://muldis.com":"0.200";

package_segment Muldis_D:"http://muldis.com":"0.200":Rational;

/*************************************************************************/

MD.Rational ::= abstract_type composes Numeric;

MD.Anormal_Ratio ::= type of Capsule
    where (
        Capsule_type(topic) = $Ratio
        and 
        has_just_attrs(topic,\%{
            numerator   : $Integer,
            denominator : $Integer.P,
        })
    )
    default 0.0
    composes Rational composes Cardinal composes Ordered;

MD.Ratio ::= type of Anormal_Ratio where normal(topic) = topic;

MD.Ratio.NN ::= type of Ratio where topic >= 0.0;

MD.Ratio.P ::= type of Ratio.NN where topic > 0.0 default 1.0;

/*************************************************************************/

/* This is a common normalizing selector that can be used to implement
   various syntaxes for selecting a Ratio, such as "Int/Int". */

MD.Ratio.select_Ratio ::= function
    (Ratio <-- 0|numerator : Integer, 1|denominator : Integer)
    requires (.1 != 0)
    : normal($Ratio => \%{ numerator : .0, denominator : .1 });

MD.Ratio.normal ::= function (Ratio <-- Anormal_Ratio)
: (
    an ::= (%.0).numerator;
    ad ::= (%.0).denominator;

    /* Normalize pair so denominator is always > 0. */
    n ::= (ad > 0 ?? an !! -an);
    d ::= (ad > 0 ?? ad !! -ad);

    /* Determine greatest common divisor of pair. */
    gcd ::= (\(abs(n),abs(d)) --> (function : 
            .1 = 0 ?? .0 !! 0( .1, mod( .0, .1, round_meth : $=>To_Zero ))
        ));

    <-- $Ratio => \%{
        numerator   : div( n, gcd, round_meth : $=>To_Zero ),
        denominator : div( d, gcd, round_meth : $=>To_Zero ),
    };
);

/*************************************************************************/

MD.Ratio."*"|times|multiply|product ::= function
    (Ratio <-- 0|multiplicand : Ratio, 1|multiplier : Ratio)
    implements Numeric."*" is {commutative,associative} identity 1.0
    : select_Ratio( (%.0).numerator * (%.1).numerator,
        (%.0).denominator * (%.1).denominator );

Muldis_D:PT_STD:ASCII:"http://muldis.com":"0.200.0";

package_segment Muldis_D:"http://muldis.com":"0.200.0":Voidlike;

/*************************************************************************/

MD.Voidlike ::= abstract_type;

MD.Voidlike.Void ::= type of Singleton composes Voidlike
    where (Capsule_type(topic) = $Void);

MD.Voidlike.Unknown ::= type of Singleton composes Voidlike
    where (Capsule_type(topic) = $Unknown);

MD.Voidlike.Not_Applicable ::= type of Singleton composes Voidlike
    where (Capsule_type(topic) = $Not_Applicable);

/*************************************************************************/

/* Note: We have not given "//" an identity value, eg Void, because in the
   contexts where the op may be used, other Voidlike identities might be
   desired instead, and better let the contexts just decide explicitly. */

MD.Voidlike."//" ::= function
    (Universal <-- Universal, Universal)
    is_associative is_idempotent : (.0 !isa $Voidlike ?? .0 !! .1);

MD.Voidlike.coalesce ::= function (Universal <-- Array)
    requires (?#.0) : ([//] .0);

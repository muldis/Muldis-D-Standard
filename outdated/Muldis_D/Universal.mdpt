MD.Universal.same_low_level_type ::= function
    --> Boolean <-- (Universal, Universal)
    is {commutative}
    : topic --> \^same_low_level_type;

`Note that "same_base_type" is designed to give the answer that would be
   the most useful to normal users, which is also simple and deterministic,
   and that is to treat Capsule as a multiplicity of base types while
   treating all non-Capsule low-level types as just one base-type each.`

MD.Universal.same_base_type ::= function
    --> Boolean <-- (Universal, Universal)
    is {commutative}
: (
    if same_low_level_type(.0,.1) then
        if .0 isa $Capsule then
            Capsule_type(.0) = Capsule_type(.1)
        else true
    else false
);

`#########################################################################`

`Note that ":=" is a keyword; this updater is a shim over it.`

MD.Universal.":=" ::= updater (&Universal, Universal)
    : {.0 := .1};

MD.Universal.assign ::= updater
    (&target : Universal, value : Universal)
    : {.target := .value};
